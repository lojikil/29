#@(#) a simple let/let-rec rewriter
#@(#) rewrite let/let-rec ASTs to 
#@(#) simple val nodes

record NameMap {
    len : int
    names : array[string]
    vals : array[string]
}

# specializing Option here
# myself, because carML's 
# allocation strategy hasn't
# *really* been decided yet...
type OptionString {
    SomeString string
    NoString
}

def fresh_name src:string => string = {
    val len : int = (+ 10 $ strlen src) 
    var f : string = (make-string ' ' len)
    
    snprintf f "%s%d" len src $ arc4random 
    f
}

def find_name rewrites:ref[NameMap] => ref[OptionString] = {
    var ret : ref[OptionString] = (NoString_ref)
    foreach-index (-> rewrites len) fn x : int = {

    }

}


def rewrite_names head:ref[AST] rewrites:NameMap => ref[AST] = {
    match (-> head tag) with
        TIDENT => {
            if
        }
        else => ...
    }
}

def let_to_val head:ref[AST] rewrites:NameMap => ref[AST] = {
    nil
}
